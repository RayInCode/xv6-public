Task 1: Simple MQLF Scheduler
1. added two fileds prioty and ticks in struct proc
2. add a new struct pstat in pstat.h as a container to convey basic info of processes in ptable
3. switch scheduler algorithm as description:
	(1) traverse all table to activate a high priority process when system is rescheduling
	(2) until traverse back to the index of last running process then try to find a low priority process
4. creat two system call getpinfo and settickets enable user programe to get basic info of pocesses in ptable and set their priority
5. modified alloproc and fork function to inheirt parent process's priority and refresh ticks filed to 0

Task 2: Null Pointer Dereference
1. modify entry address of user programs to second page's virtual address (0x1000)
2. modify exec() function to get user programs setting up their page table entry from virtual address 0x1000
3. modify copyuvm function in fork system call let child copy parent's memory from virtual address 0x1000 which keep inheritence

Task 3: Read Only Memory
1. add two system calls mprotect and munprotect in vm.c to set and unset PTE_W bit of virtual page given by system call in user side
2. key step is to call walkpadir to get the pte correctly corresponding to the virtual page we want
